# -*- coding: utf-8 -*-
"""Social Media Sentiment Analysis . ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EPa3Tx3OhyAVIhpuAEV3n_xrGDUNTxPB
"""

import pandas as pd
import nltk
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv('/content/sentimentdataset.csv')

print(df.head())

print(df.describe())

import re

def preprocess_tweet(tweet):
    tweet=str(tweet)
    tweet = re.sub(r"http\S+|www\S+|https\S+", '', tweet, flags=re.MULTILINE)
    tweet = re.sub(r"@\w+", '', tweet)
    tweet = re.sub(r"[^a-zA-Z\s]", '', tweet)
    tweet = tweet.lower()
    def word_tokenize(text, language="english", preserve_line=False):
      tokens = word_tokenize(tweet)
      tokens = [word for word in tokens if word not in stopwords.words('english')]
      return ' '.join(tokens)

df['cleaned_tweet'] = df['Retweets'].apply(preprocess_tweet)
print(df.columns)
print(df.head())

from textblob import TextBlob

def get_sentiment(text):
    analysis = TextBlob(text)
    # Classify sentiment as positive, neutral, or negative
    if analysis.sentiment.polarity > 0:
        return 'Positive'
    elif analysis.sentiment.polarity == 0:
        return 'Neutral'
    else:
        return 'Negative'

plt.xlabel('Timestamp')
plt.ylabel('Retweets')
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='Timestamp',y='Retweets')
plt.show()